generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid()) @unique
  name      String?
  email     String        @unique
  books     Book[]        @relation("UserBooks")
  plan      Plan          @default(FREE)
  
  customerId String? @unique
  Subscription Subscription?

  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())

  BookPermission BookPermission[]
}

model Book {
  id               String              @id @default(uuid()) @unique
  title            String
  author           String
  summary          String
  genre            String
  cover            String
  rating           Int                 @default(2)
  user             User[]              @relation("UserBooks")
  permissions      BookPermission[]    @relation("BookPermissions")
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @default(now()) @updatedAt
  readingProgress   ReadingProgress[]   @relation("BookReadingProgress")

  BookPermission BookPermission[]
}

model ReadingProgress {
  id                    String   @id @default(uuid()) @unique
  bookId                String
  month                 Int
  completionPercentage  Int      @default(0) 
  book                  Book     @relation("BookReadingProgress", fields: [bookId], references: [id])

  @@unique([bookId, month]) 
}

// New model for sharing permissions
model BookPermission {
  id         String   @id @default(uuid()) @unique
  userId     String
  bookId     String
  isPublic   Boolean  @default(false) 

  user       User     @relation(fields: [userId], references: [id])
  book       Book     @relation(fields: [bookId], references: [id])

  @@unique([userId, bookId])
  Book Book[] @relation("BookPermissions")
}

enum Plan {
  FREE
  SUBSCRIPTION
}

enum SubscriptionPeriod {
  MONTHLY
}

model Subscription {
  id          String   @id @default(uuid()) @unique
  userId      String   @unique
  plan        Plan
  period      SubscriptionPeriod

  startDate   DateTime @default(now())
  endDate     DateTime

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  User        User     @relation(fields: [userId], references: [id])
}
